# Deny OR Allow Folder Indexes.
# Since we disable access to PHP files you
# can leave this on without worries.
# OR better yet, create a .htaccess file in
# the dir you want to allow browsing and
# set it to +Indexes
Options -Indexes

Options +FollowSymLinks

# Set the default file for indexes
DirectoryIndex index.php

<IfModule mod_rewrite.c>
	RewriteEngine On
	#This can be replaced if you have the script somewhere not in your
	#root: RewriteBase /path/to/your/folder/
	RewriteBase /space_settler/

	# You can also uncomment this if you know the IP:
	# Deny from 192.168.1.1

	# If the file is NOT the index.php file
	RewriteCond %{REQUEST_FILENAME} !index.php
	# Hide all PHP files so none can be accessed by HTTP
	RewriteRule (.*)\.php$ index.php/$1

	#Removes access to the system folder by users.
	#Additionally this will allow you to create a System.php controller,
	#previously this would not have been possible.
	#'system' can be replaced if you have renamed your system folder.
	RewriteCond %{REQUEST_URI} ^engine.*
	RewriteRule ^(.*)$ /index.php?/$1 [L]

	#When your application folder isn't in the system folder
	#This snippet prevents user access to the application folder
	#Submitted by: Fabdrol
	#Rename 'application' to your applications folder name.
	RewriteCond %{REQUEST_URI} ^space-settler.*
	RewriteRule ^(.*)$ /index.php?/$1 [L]

	#Checks to see if the user is attempting to access a valid file,
	#such as an image or css document, if this isn't true it sends the
	#request to index.php
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteRule ^(.*)$ index.php?/$1 [L]
</IfModule>

<IfModule !mod_rewrite.c>
	# If we don't have mod_rewrite installed, all 404's
	# can be sent to index.php, and everything works as normal.
	# Submitted by: ElliotHaughin

	ErrorDocument 404 /index.php
</IfModule>
